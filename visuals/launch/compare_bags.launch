<launch>
	<!-- Visualize (via Octomap) two lidar pointclouds -->

	<!-- need to change your bag files to be named "main.bag", "front.bag", "rear.bag" -->
	<!-- need to merge the bag files from sensor1 and sensor2 so that there are two PointCloud2 topics, and odom -->

	<!-- choose sensor: "main", "front", "rear" -->
	<arg name="sensor1" default="main" />
	<arg name="sensor2" default="front" />

	<param name="/use_sim_time" value="true"/>

	<!-- Static transform between sensor 1 and sensor 2 -->
	<!-- Manually input the extrinsic sensor calibration you wish to visualize -->
	<!-- main / front -->
	<group if="$(eval arg('sensor2') == 'front')" >
		<node pkg="tf" type="static_transform_publisher" name="sensor_cal" args="0.063243241890267 -0.077614869285064 -0.120317182567876 0.083789322206061 0.206034219020306 -0.374636840599707 0.900098043405501 /husky4/velodyne /husky4/velodyne_front 10" />
	</group>
	<!-- main / rear -->
	<group if="$(eval arg('sensor2') == 'rear')" >
		<node pkg="tf" type="static_transform_publisher" name="sensor_cal" args="-0.447675 0.434423 -0.225081 2.37436 0.390272 -0.00534603 /husky4/velodyne /husky4/velodyne_rear 10" />
	</group>

	<node pkg="rosbag" type="play" name="$(eval arg('sensor1') + '_' + arg('sensor2') + '_lidar')" output="screen" args="$(eval '--clock /home/phil/subt_data/' + arg('sensor1') + '_' + arg('sensor2') + '.bag -r 15')"/>

	<!-- Octomap server for sensor 1 -->
	<node pkg="octomap_server" type="octomap_server_node" name="$(eval arg('sensor1') + '_octomap_server')">
		<param name="resolution" value="0.1" />
		
		<!-- fixed map frame (set to 'map' if SLAM or localization running!) -->
		<param name="frame_id" type="string" value="husky4/map" />
		
		<!-- maximum range to integrate (speedup!) -->
		<param name="sensor1_model/max_range" value="15.0" />

		<param name="height_map" type="bool" value="false" />
		<param name="color/r" value="1.0" />
		<param name="color/g" value="0.0" />
		<param name="color/b" value="0.0" />
		<param name="color/a" value="0.3" />
		
		<!-- data source to integrate (PointCloud2) -->
		<remap from="cloud_in" to="/husky4/velodyne_points" if="$(eval arg('sensor1') == 'main')" />
		<remap from="cloud_in" to="/husky4/velodyne_front/velodyne_points" if="$(eval arg('sensor1') == 'front')" />
		<remap from="cloud_in" to="/husky4/velodyne_rear/velodyne_points" if="$(eval arg('sensor1') == 'rear')" />

		<remap from="occupied_cells_vis_array" to="$(eval arg('sensor1') + '_octomap')" />

	</node>

	<!-- Octomap server for sensor 2 -->
	<node pkg="octomap_server" type="octomap_server_node" name="$(eval arg('sensor2') + '_octomap_server')">
		<param name="resolution" value="0.1" />
		
		<!-- fixed map frame (set to 'map' if SLAM or localization running!) -->
		<param name="frame_id" type="string" value="husky4/map" />
		
		<!-- maximum range to integrate (speedup!) -->
		<param name="sensor1_model/max_range" value="15.0" />

		<param name="height_map" type="bool" value="false" />
		<param name="color/r" value="0.0" />
		<param name="color/g" value="1.0" />
		<param name="color/b" value="0.0" />
		<param name="color/a" value="0.3" />
		
		<!-- data source to integrate (PointCloud2) -->
		<remap from="cloud_in" to="/husky4/velodyne_points" if="$(eval arg('sensor2') == 'main')" />
		<remap from="cloud_in" to="/husky4/velodyne_front/velodyne_points" if="$(eval arg('sensor2') == 'front')" />
		<remap from="cloud_in" to="/husky4/velodyne_rear/velodyne_points" if="$(eval arg('sensor2') == 'rear')" />

		<remap from="occupied_cells_vis_array" to="$(eval arg('sensor2') + '_octomap')" />

	</node>

	<!-- TF transform to put both sensors in map frame -->
	<node pkg="visuals" type="tf_transform" name="tf_tranformer" >
		<param name = "sensor1" value = "$(eval arg('sensor1'))" />
		<param name = "sensor2" value = "$(eval arg('sensor2'))" />
		
	</node>

	<node pkg="rviz" type="rviz" name="rviz" />

</launch>